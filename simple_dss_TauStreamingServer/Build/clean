#!/bin/sh
 
#Build clean script for Darwin Streaming Server
# modified by tao_627@yahoo.cn 2011-07-02

if [ `uname` = "Darwin" ] ; then
    VERSION=dss
else
    VERSION=`grep kVersion revision.h | grep -o [:0123456789:].*[:0123456789:]`
fi


OSNAME=`uname`
HARDWARENAME=`uname -m`
 
PLAT=$OSNAME.$HARDWARENAME

echo "Build clean for Darwin Streaming Server"
echo "-----------------------"



echo "Configuring for the "$OSNAME" "$HARDWARENAME" platform"
CPLUS=gcc
CCOMP=gcc
LINKER='gcc'
MAKE=make
 		
COMPILER_FLAGS="-D_REENTRANT -pipe"
INCLUDE_FLAG="-include"
		
CORE_LINK_LIBS="-lpthread -ldl -lstdc++ -lm -lcrypt"

SHARED=-shared
MODULE_LIBS=
		
if [ -f /usr/include/socketbits.h ]; then
	NEED_SOCKETBITS=1
	export NEED_SOCKETBITS
fi
		
if [ "$*" = "install" ] ; then

        if [ `uname` != "SunOS" ]; then
                USERID=`id -u`
        else
                USERID=`/usr/xpg4/bin/id -u`
        fi

        if [ $USERID != 0 ]; then
                echo "You must be root to perform an \"install\" build"
                exit 1
        fi
fi

echo Building for $PLAT with $CPLUS


	export CPLUS
	export CCOMP
	export LINKER
	export COMPILER_FLAGS
	export INCLUDE_FLAG
	export CORE_LINK_LIBS
	export SHARED
	export MODULE_LIBS
	
	echo clean Building CommonUtilitiesLib for $PLAT with $CPLUS
	cd ../CommonUtilities/
	$MAKE clean
	
	echo

	echo clean Building QTFileLib internal for $PLAT with $CPLUS
	cd ../MP4Packetizer/
	$MAKE clean
	
	echo
	
	echo clean Building StreamingServer for $PLAT with $CPLUS
	cd ../ServerCore/
	$MAKE clean
	
	echo Building RefMovieModule for $PLAT with $CPLUS
  cd ../APIModules/QTSSRefMovieModule/
  $MAKE clean

  echo Building HomeDirectoryModule for $PLAT with $CPLUS
  cd ../QTSSHomeDirectoryModule/
  $MAKE clean
	
	
